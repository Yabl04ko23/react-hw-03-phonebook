{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsListItem/ContactsListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","contactName","onSubmit","filter","contact","toLowerCase","length","alert","this","className","required","type","placeholder","onChange","Component","ContactsListItem","id","onDelete","onClick","ContactList","contactsItem","onDeleteContact","map","Filter","filterValue","changeFilter","e","App","contacts","addContact","uuidv4","prevState","deleteContact","taskId","findContact","includes","localContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","foundContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.379e8494.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const { contactName, onSubmit } = this.props;\r\n    const { name, number } = this.state;\r\n    contactName.filter((contact) => contact.name.toLowerCase() === name.toLowerCase()).length === 0\r\n      ? onSubmit(name, number)\r\n      : alert(`${name} is alredy in contacs`);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    ContactForm.propTypes = {\r\n      onSubmit: PropTypes.func,\r\n      contactName: PropTypes.array,\r\n    };\r\n\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"contact-form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"contact-label\">\r\n          Name\r\n          <input\r\n            className=\"contact-input\"\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className=\"contact-label\">\r\n          Number\r\n          <input\r\n            className=\"contact-input\"\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className=\"submit-Btn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactsListItem extends Component {\r\n  render() {\r\n    ContactsListItem.propTypes = {\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      onDelete: PropTypes.func\r\n    }\r\n    const { id, name, number, onDelete } = this.props;\r\n    return (\r\n      <li className=\"contact-item\" id={id}>\r\n        {name}: {number} <button className=\"deleteBtn\" onClick={onDelete}>Delete</button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsListItem;\r\n","import React, { Component } from \"react\";\r\nimport ContactsListItem from \"../ContactsListItem/ContactsListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    ContactList.propTypes = {\r\n      contactsItem: PropTypes.array,\r\n      onDeleteContact: PropTypes.func,\r\n    };\r\n    const { contactsItem, onDeleteContact } = this.props;\r\n    return (\r\n      <ul>\r\n        {contactsItem.map((contactsItem) => {\r\n          return (\r\n            <ContactsListItem\r\n              key={contactsItem.id}\r\n              name={contactsItem.name}\r\n              number={contactsItem.number}\r\n              onDelete={() => onDeleteContact(contactsItem.id)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    Filter.propTypes = {\r\n      filterValue: PropTypes.string,\r\n      changeFilter: PropTypes.func,\r\n    };\r\n    const { filterValue, changeFilter } = this.props;\r\n    return (\r\n      <div>\r\n        <label className=\"contact-label\">\r\n          Find contacts by name\r\n          <input\r\n            className=\"contact-input\"\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"filter\"\r\n            value={filterValue}\r\n            onChange={(e) => changeFilter(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    let localContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (!localContacts) {\n      this.setState(() => {\n        return { contacts: localContacts };\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  deleteContact = (taskId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== taskId),\n      };\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const foundContacts = this.findContact();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contactName={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter changeFilter={this.changeFilter} filterValue={filter} />\n        <ContactList contactsItem={foundContacts} onDeleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}